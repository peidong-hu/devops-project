---
  - name: Provision an EC2 Instance
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    # Necessary Variables for creating/provisioning the EC2 Instance
    vars:
      instance_type: EC2_INSTANCE_TYPE #t2.micro
      security_group: DEMO_SERVER_SECURITY_GROUP #demo-server2 # Change the security group name here
      image: AWS_IMAGE_ID #ami-89972eed # This is an AMI i created myself
      keypair: AWS_KEYPAIR_NAME #demo-webserver # This is one of my keys that i already have in AWS
      region: AWS_REGION_NAME #ca-central-1 # Change the Region
      count: EC2_INSTANCE_COUNT #1
      vpc_subnet_id:  subnet-e1c4259b
    # Task that will be used to Launch/Create an EC2 Instance
    tasks:

      - name: Create a security group
        local_action: 
          module: ec2_group
          name: "{{ security_group }}"
          description: demo-server2
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
        register: basic_firewall

      - name: Launch the new EC2 Instance
        local_action: ec2 
                      group={{ security_group }} 
                      instance_type={{ instance_type}} 
                      image={{ image }} 
                      wait=true 
                      region={{ region }} 
                      keypair={{ keypair }}
                      vpc_subnet_id={{ vpc_subnet_id }}
                      count={{count}}
        register: ec2

      - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
        local_action: lineinfile 
                      dest="./hosts" 
                      regexp={{ item.public_ip }} 
                      insertafter="[webserver]" line={{ item.public_ip }}
        loop: "{{ec2.instances}}"


      - name: Wait for SSH to come up
        local_action: wait_for 
                      host={{ item.public_ip }} 
                      port=22 
                      state=started
        loop: "{{ec2.instances}}"

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        loop: "{{ec2.instances}}"
        args:
          tags:
            Name: webserver
      
